(lambda token, url='https://api.vk.com/method/': (lambda request: (lambda data={'lp_response': request(url + 'messages.getLongPollServer', {})['response']}:(data.update({'server': data['lp_response']['server'], 'key': data['lp_response']['key'], 'ts': data['lp_response']['ts'], 'pts': 2**5}), (lambda data: [((data.update({'lp_response': request('http://' + data['server'], {'act': 'a_check', 'key': data['key'], 'ts': data['ts'], 'wait': 25})})), [(lambda peer_id, message: request(url + 'messages.send', {'peer_id': peer_id, 'message': message, 'random_id': __import__('random').getrandbits(64)}))(update[3], update[6]) for update in data['lp_response']['updates'] if update[0] == 4], data.update({'pts': request(url + 'messages.getLongPollServer', {'lp_version': '3', 'need_pts': data['pts']})['response']['pts'], 'ts': request(url + 'messages.getLongPollServer', {'lp_version': '3', 'need_pts': data['pts']})['response']['ts']})) for _ in __import__('itertools').count()])(data)))())(lambda URL, params: __import__('requests').get(URL, params={**params, 'access_token': token, 'v': '5.103'}).json()))(token=input('Введите свой access-токен: '))